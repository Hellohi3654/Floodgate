name: Build-with-release

on: 
  workflow_dispatch:
    inputs:
      name:
        description: 'Build with Release'
        required: true
        default: 'Build'
      home:
        description: 'location'
        required: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: (Hacky) method of compiling Geyser with Floodgate first #Thanks Jackson_57#4340 or https://github.com/jackson-57
        run: |
          git clone -b patch-1 https://github.com/Hellohi3654/Geyser.git GeyserFloodgate
          cd GeyserFloodgate
          mvn clean install -T 2C -Dpmd.failOnViolation=false
          cd ..
      - name: Build with Maven
        run: mvn -B package -T 2C
      - name: Archive artifacts (Floodgate Bungee)
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: Floodgate Bungee
          path: bungee/target/floodgate-bungee.jar
      - name: Archive artifacts (Floodgate Spigot)
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: Floodgate Spigot
          path: spigot/target/floodgate-spigot.jar
      - name: Archive artifacts (Floodgate Velocity)
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: Floodgate Velocity
          path: velocity/target/floodgate-velocity.jar
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Floodgate2.0_v${{ github.run_number }}
          release_name: Floodgate2.0_v${{ github.run_number }}
          draft: false
          prerelease: false
    
      - name: Upload Release Asset 1
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: bungee/target/floodgate-bungee.jar
          asset_name: floodgate-bungee.jar
          asset_content_type: application/zip

      - name: Upload Release Asset 2
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: spigot/target/floodgate-spigot.jar
          asset_name: floodgate-spigot.jar
          asset_content_type: application/zip
        
      - name: Upload Release Asset 3
        id: upload-release-asset-3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: velocity/target/floodgate-velocity.jar
          asset_name: floodgate-velocity.jar
          asset_content_type: application/zip
